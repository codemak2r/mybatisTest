<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.joymo.top.mapper.TopUserRoleMapper">
  <resultMap id="BaseResultMap" type="tech.joymo.top.model.TopUserRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="top_user_id" jdbcType="BIGINT" property="topUserId" />
    <result column="top_role_id" jdbcType="BIGINT" property="topRoleId" />
    <result column="top_source_id" jdbcType="BIGINT" property="topSourceId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, top_user_id, top_role_id, top_source_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="tech.joymo.top.model.TopUserRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from top_user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from top_user_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from top_user_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tech.joymo.top.model.TopUserRoleExample">
    delete from top_user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tech.joymo.top.model.TopUserRole">
    insert into top_user_role (id, top_user_id, top_role_id, 
      top_source_id, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{topUserId,jdbcType=BIGINT}, #{topRoleId,jdbcType=BIGINT}, 
      #{topSourceId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="tech.joymo.top.model.TopUserRole">
    insert into top_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topUserId != null">
        top_user_id,
      </if>
      <if test="topRoleId != null">
        top_role_id,
      </if>
      <if test="topSourceId != null">
        top_source_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="topUserId != null">
        #{topUserId,jdbcType=BIGINT},
      </if>
      <if test="topRoleId != null">
        #{topRoleId,jdbcType=BIGINT},
      </if>
      <if test="topSourceId != null">
        #{topSourceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tech.joymo.top.model.TopUserRoleExample" resultType="java.lang.Long">
    select count(*) from top_user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update top_user_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.topUserId != null">
        top_user_id = #{record.topUserId,jdbcType=BIGINT},
      </if>
      <if test="record.topRoleId != null">
        top_role_id = #{record.topRoleId,jdbcType=BIGINT},
      </if>
      <if test="record.topSourceId != null">
        top_source_id = #{record.topSourceId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update top_user_role
    set id = #{record.id,jdbcType=BIGINT},
      top_user_id = #{record.topUserId,jdbcType=BIGINT},
      top_role_id = #{record.topRoleId,jdbcType=BIGINT},
      top_source_id = #{record.topSourceId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tech.joymo.top.model.TopUserRole">
    update top_user_role
    <set>
      <if test="topUserId != null">
        top_user_id = #{topUserId,jdbcType=BIGINT},
      </if>
      <if test="topRoleId != null">
        top_role_id = #{topRoleId,jdbcType=BIGINT},
      </if>
      <if test="topSourceId != null">
        top_source_id = #{topSourceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tech.joymo.top.model.TopUserRole">
    update top_user_role
    set top_user_id = #{topUserId,jdbcType=BIGINT},
      top_role_id = #{topRoleId,jdbcType=BIGINT},
      top_source_id = #{topSourceId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>